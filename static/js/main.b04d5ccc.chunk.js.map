{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","onClick","style","background","color","className","title","defaultProps","Header","location","useLocation","pathname","showAddTask","onAdd","Task","task","reminder","onDoubleClick","onToggle","id","text","cursor","onDelete","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","value","onChange","target","placeholder","checked","currentTarget","App","setTasks","setShowAddTask","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","path","exact","render","length","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b04d5ccc.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types'\nconst Button = (props)=>{\n    return(\n        <button\n        onClick={props.onClick}\n        style={{background: props.color}}\n        className='btn'>\n            {props.title}\n        </button>\n        )\n}\n\nButton.defaultProps = {\n    color: \"steelblue\",\n}\nButton.propTypes ={\n    title: PropTypes.string.isRequired,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n}\nexport default Button\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport Button from './Button';\nimport {useLocation} from 'react-router-dom'\nconst Header = (props) =>{\n   const location = useLocation();\n    return (\n    <header className=\"header\">\n    <h1>{props.title}</h1>\n    {location.pathname === '/' && <Button title={props.showAddTask ?\n         'Close' : 'Add'} \n         color={props.showAddTask?\n          'red' : 'green'} \n          onClick={props.onAdd}/>}\n    </header>\n    )\n\n}\nHeader.defaultProps = {\n    title: 'Task Tracker',\n}\nHeader.propTypes = {\n    title : PropTypes.string,\n}\nexport default Header\n","import React from 'react';\nimport {FaTimes} from 'react-icons/fa';\n\nconst Task = (props) => {\n    return (\n        <div className={`task ${ props.task.reminder ? 'reminder' : '' }`} onDoubleClick={() => props.onToggle(props.task.id)}>\n            <h3>\n                {props.task.text}{' '}\n                <FaTimes style={{color:'red',cursor:'pointer'}}\n                 onClick={() =>props.onDelete(props.task.id)}/>\n            </h3>\n            <p>{props.task.day}</p>\n        </div>\n    )\n}\n\nexport default Task;\n","import Task from './Task';\nconst Tasks = (props) => {\n      return (\n            <div>\n                {props.tasks.map((task) => (\n                <Task key={task.id}\n                 task={task} \n                 onDelete={props.onDelete}\n                 onToggle={props.onToggle} />))}\n            </div>\n        )\n}\nexport default Tasks;","import {useState} from 'react';\n const AddTask = (props) => {\n    const [text,setText] = useState('');\n    const [day,setDay] = useState('');\n    const [reminder,setReminder] = useState(false);\n\n    const onSubmit = (e) =>{\n        e.preventDefault();\n        if(!text){\n            alert(\"Please Add a task\");\n            return;\n        }\n        props.onAdd({text,day,reminder});\n        setText('');\n        setDay('');\n        setReminder(false);\n\n    }\n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n            <label>Task</label>\n            <input type=\"text\"  value={text} onChange={(e)=> setText(e.target.value)} placeholder=\"Add Task\"/>\n            </div>\n            <div className='form-control'>\n            <label>Day & Time</label>\n            <input type=\"datetime-local\"  value={day} onChange={(e) => setDay(e.target.value)} placeholder=\"Add Day & Time\"/>\n            </div>\n            <div className='form-control form-control-check'>\n            <label>Reminder</label>\n            <input type=\"checkbox\" checked={reminder} value={reminder} onChange={(e)=> setReminder(e.currentTarget.checked)} />\n            </div>\n            <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\"/>\n        </form>\n    )\n}\nexport default AddTask;","import './App.css';\nimport {BrowserRouter as Router,Route,Link} from 'react-router-dom';\nimport {useState,useEffect} from 'react';\nimport Header from './components/Header';\nimport Tasks from './components/tasks';\nimport AddTask from './components/AddTask';\nfunction App() {\n  const [tasks,setTasks] = useState([]);\n  const [showAddTask,setShowAddTask] = useState(false);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    }\n    getTasks();\n  },[])\n  const fetchTasks = async () =>{\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n    return data;\n  }\n  //Fetch Task\n  const fetchTask = async (id) =>{\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  }\n  \n  const addTask = async (task) =>{\n    const res = await fetch('http://localhost:5000/tasks',{\n    method : 'POST',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify(task)\n  });\n\n\n  const data = await  res.json();\n  setTasks([...tasks,data])\n} \n\nconst deleteTask = async (id) =>{\n  await fetch(`http://localhost:5000/tasks/${id}`,\n  {\n    method: 'DELETE',\n  })\n  setTasks(tasks.filter((task)=>task.id!==id));\n}\n\n\nconst toggleReminder = async (id) =>{\n  const taskToToggle = await fetchTask(id);\n  const updTask = { ...taskToToggle,\n    reminder : !taskToToggle.reminder}\n  const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(updTask)\n  })\n  const data = await res.json();\n\n  setTasks(\n    tasks.map(((task)=>\n    task.id === id ? { ...task,\n       reminder: data.reminder} : task\n       )\n      )\n    )\n  }\n  return (\n    <Router>\n    <div className=\"container\">\n    <Header title=\"Task Bar\"\n    onAdd={() => setShowAddTask(!showAddTask)}\n    showAddTask = {showAddTask} />\n    <Route path='/'\n     exact \n     render={(props)=>\n    (\n    <>\n      {showAddTask && <AddTask onAdd={addTask} />}\n      { tasks.length > 0 ? \n        <Tasks  tasks={tasks} \n        onDelete={deleteTask} onToggle={toggleReminder}/> : 'No task to show.'}\n     </>\n     )\n      } />\n      </div>\n      <Link exact to=\"location\" ><h1>Location</h1> </Link>\n      </Router>\n      );\n    }\n    export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}